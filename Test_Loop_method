import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QTextEdit
from PyQt5.QtCore import pyqtSignal, QThread, pyqtSlot


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.initUI()
        self.testa = Test_A()
        self.testb = Test_B()
        self.testa.update_status.connect(self.update_status)
        self.testa.run_Test_B.connect(self.run_testb)
        self.testb.update_status.connect(self.update_status)
        self.testb.stop_Test_A.connect(self.testa.stop)

    def initUI(self):
        # 设置窗口标题
        self.setWindowTitle('PyQt5 Example')

        # 设置窗口大小
        self.setGeometry(100, 100, 300, 300)

        # 创建文本编辑框
        self.editText = QTextEdit(self)
        self.editText.setGeometry(50, 20, 200, 100)

        # 创建Start按钮
        self.startButton = QPushButton('Start', self)
        self.startButton.setGeometry(50, 170, 80, 30)
        self.startButton.clicked.connect(self.on_start)

        # 创建Stop按钮
        self.stopButton = QPushButton('Stop', self)
        self.stopButton.setGeometry(150, 170, 80, 30)
        self.stopButton.clicked.connect(self.on_stop)

    def on_start(self):
        self.testa.start()

    def run_testb(self):
        self.testb.start()

    def on_stop(self):
        self.editText.append('Stop button clicked')

    def update_status(self, text):
        self.editText.append(text)


class Test_A(QThread):
    update_status = pyqtSignal(str)
    run_Test_B = pyqtSignal()

    def __init__(self):
        super(Test_A, self).__init__()

    def run(self):
        self.update_status.emit('A started!')
        self.sleep(2)
        self.run_Test_B.emit()
        while not self.isInterruptionRequested():
            self.msleep(100)  # 使用 msleep 代替 loop，避免阻塞事件循环
        self.update_status.emit('A loop ended!')

    @pyqtSlot()
    def stop(self):
        self.update_status.emit('Received stop signal, A will stop loop!')
        self.requestInterruption()


class Test_B(QThread):
    update_status = pyqtSignal(str)
    stop_Test_A = pyqtSignal()

    def __init__(self):
        super(Test_B, self).__init__()

    def run(self):
        self.update_status.emit('B started!')
        self.sleep(2)
        self.stop_Test_A.emit()
        self.update_status.emit('B finished!')


if __name__ == '__main__':
    app = QApplication(sys.argv)
    mainWindow = MainWindow()
    mainWindow.show()
    sys.exit(app.exec_())
